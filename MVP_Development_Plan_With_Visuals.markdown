# План разработки модуля “Ремонт” для Telegram WebApp (MVP)

## Общая информация
- **Название проекта**: Q — Telegram WebApp для ремонта мобильных устройств
- **Модуль**: Ремонт
- **Целевая аудитория**: 18–45 лет, Москва, пользователи смартфонов
- **Платформа**: Telegram WebApp, адаптивный дизайн
- **Цель**: Минимально жизнеспособный продукт для быстрого запуска.

## Технологический стек
- **Фронтенд**: Vue 3, TypeScript, Telegram WebApp SDK, Vuetify
- **Бэкенд**: Node.js (NestJS), Telegram Bot API
- **База данных**: JSON (каталог, прайс), PostgreSQL (заявки)
- **Хранилище**: AWS S3 (фото)
- **Безопасность**: HTTPS, rate-limiting
- **Инфраструктура**: Heroku/DigitalOcean, ручной деплой

## Ограничения MVP
- Без ML/ИИ (ручная оценка фото).
- Без Yandex Maps (текстовый ввод адреса).
- Без аналитики (Yandex Metrika отложена).
- Без чата с мастером.
- Без оплаты (ЮKassa).
- Каталог: 5 брендов, 20 моделей, 5 поломок.

## Оценка трудозатрат
Оценка дана для одного senior full-stack разработчика (8 часов/день).

| Модуль | Задачи | Оценка (часы) |
|--------|--------|---------------|
| Авторизация | Telegram Login, сохранение данных | 6–8 |
| Путь клиента | | |
| - Выбор бренда | Список (JSON), “Другое” | 8–10 |
| - Выбор модели | Список (JSON), ручной ввод | 10–12 |
| - Выбор поломки | Список (JSON), ручной ввод | 8–10 |
| - Загрузка фото | Интерфейс, S3 (без ML) | 12–16 |
| - Предварительная оценка | Прайс (JSON) | 10–14 |
| - Выбор запчастей | Оригинал/копия, пересчет | 6–8 |
| - Время и адрес | Текстовый ввод, слоты | 10–14 |
| - Подтверждение заявки | Резюме, отправка | 8–10 |
| - После отправки | Статус, переход в ЛК | 4–6 |
| Личный кабинет | Статусы, история | 15–20 |
| Админка | Веб-интерфейс, Telegram Login | 20–30 |
| Безопасность | HTTPS, rate-limiting | 10–15 |
| API | Заявки, JSON-каталог | 20–30 |
| Инфраструктура | Сервер, ручной деплой | 10–15 |
| Тестирование | Unit (Vitest), ручное QA | 15–20 |
| **Итого** | | **166–206 часов** |

## Сроки
- **Рабочие дни**: 21–26 дней (~1–1.5 месяца)
- **С учетом выходных**: 1.5–

2 месяца
- **Тестирование (отдельно)**: 15–-20 часов (~2–3 дня)

## Временная шкала (Gantt chart)
```mermaid
gantt
    title План разработки (MVP)
    dateFormat  YYYY-MM-DD
    section Подготовка
    Настройка проекта        :a1, 2025-07-07, 3d
    section Авторизация
    Telegram Login           :a2, after a1, 1d
    section Путь клиента
    Каталог (бренды, модели) :a3, after a2, 3d
    Поломки, фото, оценка    :a4, after a3, 5d
    Запчасти, адрес, заявка  :a5, after a4, 4d
    section Личный кабинет
    Статусы, история         :a6, after a5, 3d
    section Админка
    Веб-интерфейс            :a7, after a6, 5d
    section Безопасность
    HTTPS, rate-limiting     :a8, after a7, 2d
    section Тестирование
    Unit, QA                 :a9, after a8, 3d
    section Деплой
    Инфраструктура, деплой   :a10, after a9, 2d
```

## Распределение трудозатрат (Pie chart)
```mermaid
pie title Распределение трудозатрат
    "Авторизация" : 7
    "Путь клиента" : 90
    "Личный кабинет" : 18
    "Админка" : 25
    "Безопасность" : 12
    "API" : 25
    "Инфраструктура" : 12
    "Тестирование" : 18
```

## Риски
- Ограничения Telegram WebApp (производительность, размер бандла).
- Качество JSON-каталога зависит от данных.
- Баги в Telegram Bot API.

## Рекомендации
- Использовать Vuetify для быстрого UI.
- Подготовить JSON-каталог (5 брендов, 20 моделей, 5 поломок).
- Настроить Sentry для мониторинга.
- Тестировать на устройствах (iOS, Android).
- После MVP добавить: ML API, Yandex Maps, аналитику, чат (1–1.5 месяца).